{"version":3,"sources":["AudioDevice.tsx"],"names":["AudioDevice","constructor","uuid","type","name","select","NativeModule","voice_selectAudioDevice","Type"],"mappings":";;;;;;;AAOA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,WAAN,CAAkB;AACvB;AACF;AACA;AACA;AACA;AACA;;AAGE;AACF;AACA;;AAGE;AACF;AACA;;AAGE;AACF;AACA;AACA;AACA;AACA;AACEC,EAAAA,WAAW,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA;AAAd,GAAD,EAA8C;AAAA;;AAAA;;AAAA;;AACvD,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACEC,EAAAA,MAAM,GAAkB;AACtB,WAAOC,qBAAaC,uBAAb,CAAqC,KAAKL,IAA1C,CAAP;AACD;;AA1CsB;AA6CzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;MAMcM,I;;aAAAA,I;AAAAA,IAAAA,I;AAAAA,IAAAA,I;AAAAA,IAAAA,I;KAAAA,I,KAAAA,I;;;GALGR,W,2BAAAA,W","sourcesContent":["/**\n * Copyright Â© 2022 Twilio, Inc. All rights reserved. Licensed under the Twilio\n * license.\n *\n * See LICENSE in the project root for license information.\n */\n\nimport { NativeModule } from './common';\nimport type { NativeAudioDeviceInfo } from './type/AudioDevice';\nimport type { Uuid } from './type/common';\n\n/**\n * Describes audio devices as reported by the native layer and allows the\n * native selection of the described audio device.\n *\n * @remarks\n * To fetch a list of available audio devices and the currently selected audio\n * device, see {@link (Voice:class).getAudioDevices}.\n *\n *  - See also the {@link (AudioDevice:namespace) | AudioDevice namespace} for\n *    types used by this class.\n *\n * @public\n */\nexport class AudioDevice {\n  /**\n   * The native-UUID of this object. This is generated by the native layer and\n   * is used to associate functionality between the JS and native layers.\n   *\n   * @internal\n   */\n  uuid: Uuid;\n\n  /**\n   * The type of the audio device.\n   */\n  type: AudioDevice.Type;\n\n  /**\n   * The name of the audio device.\n   */\n  name: string;\n\n  /**\n   * Audio device class constructor.\n   * @param audioDeviceInformation - A record describing an audio device.\n   *\n   * @internal\n   */\n  constructor({ uuid, type, name }: NativeAudioDeviceInfo) {\n    this.uuid = uuid;\n    this.type = type;\n    this.name = name;\n  }\n\n  /**\n   * Calling this method will select this audio device as the active audio\n   * device.\n   * @returns\n   *  A `Promise` that\n   *    - Resolves with `void` when the audio device has been successfully\n   *      selected as the active audio device.\n   *    - Rejects if the audio device cannot be selected.\n   */\n  select(): Promise<void> {\n    return NativeModule.voice_selectAudioDevice(this.uuid);\n  }\n}\n\n/**\n * Contains interfaces and enumerations associated with audio devices.\n *\n * @remarks\n *  - See also the {@link (AudioDevice:class) | AudioDevice class}.\n *\n * @public\n */\nexport namespace AudioDevice {\n  /**\n   * Audio device type enumeration. Describes all possible audio device types as\n   * reportable by the native layer.\n   */\n  export enum Type {\n    Earpiece = 'earpiece',\n    Speaker = 'speaker',\n    Bluetooth = 'bluetooth',\n  }\n}\n"]}